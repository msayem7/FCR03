{"version":3,"file":"js/21.8e4637ae.js","mappings":"ikBA4EA,MAAMA,GAAQC,EAAAA,EAAAA,KACRC,GAAWC,EAAAA,EAAAA,IAAI,IACfC,GAAYD,EAAAA,EAAAA,IAAI,IAChBE,GAAUF,EAAAA,EAAAA,IAAI,CAClBG,SAAU,GACVC,OAAQ,GACRC,SAAU,KAGNC,EAAgBC,UACpB,IACE,IAAKV,EAAMW,eAET,MADAT,EAASU,MAAQ,GACX,IAAIC,MAAM,yBAGlB,MAAMC,EAAS,CACbC,OAAQf,EAAMW,eACdK,uBAAwBX,EAAQO,MAAMN,SACtCW,wBAAyBZ,EAAQO,MAAML,OACvCC,SAAUH,EAAQO,MAAMJ,WAGpB,KAAEU,SAAeC,EAAAA,EAAMC,IAAI,oBAAqB,CAAEN,WACxDZ,EAASU,MAAQM,CACnB,CAAE,MAAOG,GACPC,QAAQD,MAAM,eAAgBA,GAC9BE,MAAM,mBAAqBF,EAAMG,QACnC,GAGIC,EAAiBf,UACrB,IACE,MAAMI,EAAS,CACbY,WAAW,EACXX,OAAQf,EAAMW,iBAEV,KAAEO,SAAeC,EAAAA,EAAMC,IAAI,cAAe,CAAEN,WAClDV,EAAUQ,MAAQM,CACpB,CAAE,MAAOG,GACPC,QAAQD,MAAM,4BAA6BA,GAC3CE,MAAM,4BAA6BF,EAAMG,QAC3C,GAIIG,EAAwBC,IAC5B,IAAKA,EAAQC,iBAAkB,MAAO,GACtC,MAAMC,EAAO,IAAIC,KAAKH,EAAQC,kBAI7B,OADID,EAAQI,WAAWF,EAAKG,QAAQH,EAAKI,UAAYC,SAASP,EAAQQ,qBAC/DN,EAAKO,cAAcC,MAAM,KAAK,EAAE,E,OAG1CC,EAAAA,EAAAA,KAAU,KACRd,IACAhB,GAAe,KAEjB+B,EAAAA,EAAAA,IAAM,CACJ,IAAMxC,EAAMW,iBACX,KACDF,IACAgB,GAAgB,GACf,CAAEgB,WAAW,KAGhBD,EAAAA,EAAAA,IAAM,CACJ,IAAMxC,EAAM0C,iBACX,KACDjC,IACAgB,GAAgB,GACf,CAAEgB,WAAW,I,2uEC9IhB,MAAME,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://crf03/./src/views/CreditInvoiceList.vue","webpack://crf03/./src/views/CreditInvoiceList.vue?ac99"],"sourcesContent":["<template>\r\n  <div class=\"container mt-4\">\r\n    <div class=\"d-flex justify-content-between align-items-center mb-4\">\r\n      <h2>Credit Invoices</h2>\r\n      <router-link to=\"/credit-invoices/create\" class=\"btn btn-success\">\r\n        Create New\r\n      </router-link>\r\n    </div>\r\n    \r\n    <div class=\"card mb-4\">\r\n      <div class=\"card-body\">\r\n        <div class=\"row g-3\">\r\n          <div class=\"col-md-3\">\r\n            <input type=\"date\" v-model=\"filters.dateFrom\" class=\"form-control\">\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <input type=\"date\" v-model=\"filters.dateTo\" class=\"form-control\">\r\n          </div>\r\n          <div class=\"col-md-4\">\r\n            <select v-model=\"filters.customer\" class=\"form-select\">\r\n              <option value=\"\">All Customers</option>\r\n              <option v-for=\"c in customers\" :value=\"c.alias_id\" :key=\"c.alias_Id\">{{ c.name }}</option>\r\n            </select>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <button @click=\"fetchInvoices\" class=\"btn btn-primary w-100\">Filter</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <div class=\"table-responsive\">      \r\n      <table class=\"table table-striped  table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th>Invoice No</th>\r\n            <th>Customer</th>\r\n            <th>Invoice Date</th>\r\n            <th>Payment Date</th>\r\n            <th>Amount</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(invoice, index) in invoices\" :key=\"invoice.alias_id\">\r\n            <td>{{ invoice.invoice_no }} ({{ index + 1 }}/{{ invoices.length }})</td>\r\n            <td>{{ invoice.customer_name }}</td>\r\n            <td>{{ new Date(invoice.transaction_date).toLocaleDateString() }}</td>\r\n            <td>{{ calculatePaymentDate(invoice) }}</td>\r\n            <td>{{ invoice.due_amount }}</td>\r\n            <td>\r\n              <router-link \r\n                :to=\"{ name: 'CreditInvoiceEdit', params: { aliasId: invoice.alias_id }}\" \r\n                class=\"btn btn-sm btn-warning\"\r\n              >\r\n                Edit\r\n              </router-link>\r\n            </td>\r\n          </tr>\r\n          <!-- Add empty state message -->\r\n          <tr v-if=\"invoices.length === 0\">\r\n            <td colspan=\"6\" class=\"text-center\">No invoices found</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    \r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch } from 'vue'\r\nimport { useBranchStore } from '@/stores/branchStore'\r\nimport axios from '@/plugins/axios'\r\n\r\n\r\nconst store = useBranchStore()\r\nconst invoices = ref([])\r\nconst customers = ref([])\r\nconst filters = ref({\r\n  dateFrom: '',\r\n  dateTo: '',\r\n  customer: ''\r\n})\r\n\r\nconst fetchInvoices = async () => {\r\n  try {\r\n    if (!store.selectedBranch) {\r\n      invoices.value = []\r\n      throw new Error('Select a branch first')\r\n    }\r\n\r\n    const params = {\r\n      branch: store.selectedBranch,\r\n      transaction_date_after: filters.value.dateFrom,\r\n      transaction_date_before: filters.value.dateTo,\r\n      customer: filters.value.customer\r\n    }\r\n\r\n    const { data } = await axios.get('/credit-invoices/', { params })\r\n    invoices.value = data    \r\n  } catch (error) {\r\n    console.error('Fetch error:', error) // Add this debug log\r\n    alert('Credit Invoice: ' + error.message)\r\n  }\r\n}\r\n\r\nconst fetchCustomers = async () => {\r\n  try{\r\n    const params = {\r\n      is_active: true,\r\n      branch: store.selectedBranch\r\n    }\r\n    const { data } = await axios.get('/customers/', { params })\r\n    customers.value = data\r\n  } catch (error) {\r\n    console.error('Error loading customers: ', error)\r\n    alert('Error loading customers: '+ error.message)\r\n  }\r\n  \r\n}\r\n\r\nconst calculatePaymentDate = (invoice) => {\r\n  if (!invoice.transaction_date) return ''\r\n  const date = new Date(invoice.transaction_date)\r\n  //console.log(invoice.invoice_no, date, date.getDate(), parseInt(invoice.payment_grace_days))\r\n  \r\n   if (invoice.graceDays) date.setDate(date.getDate() + parseInt(invoice.payment_grace_days))\r\n   return date.toISOString().split('T')[0]\r\n}\r\n\r\nonMounted(() => {\r\n  fetchCustomers()\r\n  fetchInvoices()\r\n})\r\nwatch([\r\n  () => store.selectedBranch\r\n], () => {\r\n  fetchInvoices()\r\n  fetchCustomers()\r\n}, { immediate: true })\r\n\r\n\r\nwatch([\r\n  () => store.refreshTrigger\r\n], () => {\r\n  fetchInvoices()\r\n  fetchCustomers()\r\n}, { immediate: true })\r\n\r\n// watch([\r\n//   () => store.selectedBranch,\r\n//   () => store.refreshTrigger\r\n// ], ()=>{\r\n//   fetchInvoices,\r\n//   fetchCustomers\r\n// }, { immediate: true })\r\n</script>\r\n\r\n<style scoped>\r\n.table-responsive {\r\n  overflow-x: auto;\r\n  max-height: none; /* Remove any height restrictions */\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  border-collapse: collapse;\r\n}\r\n\r\ntbody tr {\r\n  cursor: pointer;\r\n}\r\n\r\ntbody tr:hover {\r\n  background-color: rgba(0,0,0,.075);\r\n}\r\n</style>\r\n","import script from \"./CreditInvoiceList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CreditInvoiceList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./CreditInvoiceList.vue?vue&type=style&index=0&id=38ece361&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-38ece361\"]])\n\nexport default __exports__"],"names":["store","useBranchStore","invoices","ref","customers","filters","dateFrom","dateTo","customer","fetchInvoices","async","selectedBranch","value","Error","params","branch","transaction_date_after","transaction_date_before","data","axios","get","error","console","alert","message","fetchCustomers","is_active","calculatePaymentDate","invoice","transaction_date","date","Date","graceDays","setDate","getDate","parseInt","payment_grace_days","toISOString","split","onMounted","watch","immediate","refreshTrigger","__exports__"],"sourceRoot":""}